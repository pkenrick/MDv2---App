exit
exit
exit
exi
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exitexit
rake
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exitexit
rake device
exit
exit
exit
exit
exit
exit
exit
exit
Task.all
Task.any?
Task.count
Task.attributes
Task.create(title: 'TestTask', complete: false, user_id: 1)
Task.count
Task.create(title: 'TestTask')
Task.create(name: "My first task")
Task.create(title: "My first task")
Task.create(title: 'TestTask')
Task.count
Test.first
Task.first
Task.find(2)
Task.where(id: 2)
Task.count
Task.save
exit
Task.count
Task.create(title: 'hello task')
Task.save
Task.first
Task.where(id: 1)
Task.where(title: 'hello task')
Task.first
Task.first.title
exit
Task.create(title: 'hello')
Task.first
Task.first.title
Task.last
Task.first
Task.last
Task.count
Task.save
Task.first
Task.create(title: 'well well')
task.last
Task.last
Task.first
Task.destroy_all
Task.create(title: 'yay?')
Task.first
Task.count
Task.first.destroy
Task.count
exitt
exit
Task.create(title: 'helllo', description: 'description goes here')
Task.create(title: 'hello')
Task.create(title: 'hello')
Task.create(title: 'hello')
exit
Task.create(name: 'Task1')
Task.count
Task.destroy_all
Task.all
Task.all.destroy
Task.all.destroy_all
Task.first
Task.first.destroy
Task.first
Task.first.destroy
Task.count
exit
Task.create(name: 'task1')
Task.destroy_all
Task.destroy_al
Task.destroy_all
Task.count
Task.destroy_all
exit
Task.all
Task.create(name: 'Task1')
Task.create(title: 'Task1')
Task.destroy_all
Task.save
exit
Task.any?
Task.create(title: 'Task1')
Task.first
Task.first.title
Task.destroy_all
Task.save
exit
Task.count
Task.create(title: 'Task1', description: 'First task here')
Task.any?
Task.create(title: 'task1')
Task.first
Task.first.title
Task.destroy_all
Task.save
exit
Person.count
Post.any?
Post.create(title: 'Post1', body: 'This is the body')
Person.count
Post.count
Post.save
Post.first
Post.first.title
Post.first
Post.destroy_all
Post.save
exit
Post.create(title: 'post1', body: 'hello body', tester: true)
Post.save
Post.first
Post.first.title
Post.first.tester
exit
Task.create(title: 'task1')
exit
Task.create(title: 'Task1')
Task.save
Task.first
Task.first.title = 'task1'
Task.first.title
Task.first.save
Task.save
Task.first
Task.first.details = 'This is the first one'
Task.save
Task.first
Task.destroy_all
exit
Task.any?
Task.count
Person.count
Post.count
exit
Task.coutn
Task.count
exit
Task.first
Task.first.title
Task.first.complete
Task.first.user_id
Task.destroy_all
Task.save
exit
Task.create(title: 'hey', complete: false, details: 'details of the task', due_date: Date.today)
Date.today
exit
require 'date'
Task.create(title: 'hey', complete: false, details: 'details of the task')
Task.save
Task.first
Task.first.details
Task.destroy_all
Task.save
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
Task.new(title: 'lskjdf', complete: false)
Task.save
exit
exit
exit
exit
exi
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
Task.count
Task.destroy_all
Task.save
Task.count
exit
Task.new
Task.new
exit
exit
Task.create(title: 'testTask')
Task.create(title: 'testTask')
exit
Task.count
Task.first
Task
Task.where.not(id: 10)
Task.all
Task.each{ |task| puts task.title }
Task.each{ |task| puts task.title }
exit
Task.count
Task.destroy_all
Task.save
Task.save
Task.destroy_all
Task.save
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
Task.all
Task.count
Task.count
Task.count
exit
exit
Task.create(api_id: 1, title: 'task title', complete: false)
Task.save
Task.count
Task.create(api_id: 2, title: 'another task', complete: false, details: 'these are the details')
Task.save
Task.count
Task.create(api_id: 3, title: 'another task', complete: false, details: 'these are the details', due_date: Date.today)
Task.create(api_id: 3, title: 'another task', complete: false, details: 'these are the details', due_date: NSDate.new)
Task.save
Task.count
Task.last.due_date
NSDate.today
NSDate.today
exit
exit
exit
exit
Task.destroy_all
Task.save
Task.count
exit
exit
exit
exit
exit
exit
Task.count
Task.count
Task.first.title
exit
Task.count
Task.count
exit
exit
Task.count
Task.first.title
Task.second
Task.last.title
exit
Task.count
Task.first.title
Task.first.due_date
Task.first.due_date = NSDate.new
Task.save
Task.first.due_date
Task.first.due_date.day
Task.first.due_date.month
Task.first.due_date.year
exit
Task.first
Task.first.type
Task.first.type
exit
Task.destroy_all
Task.save
Task.count
exit
exit
Task.destroy_all
Task.first
Task.save
exit
Task.first.type
Task.find(2)
Task.find(2).title
Task[1]
Task[1].title
exit
Task.create(api_id: 4, title: 'Get bank statement', complete: false, details: 'Detaaaails', due_date: NSDate.new, type: 'private')
Task.save
Task.count
exit
Task.last.api_id
Task.last.api_id = 5
Task.save
Task.last.api_id
exit
exit
exit
Task.all
Task.each{ |task| 'hello'}
exit
Task.last
Task.last.title
cdq.contexts.all
Task.first.due_date
Task.first.due_date = NSDate.new
Task.save
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
Task.where(api_id: 2)
Task.where(api_id: 2).first.title
Task.where(api_id: 2).first.complete = true
Task.save
exit
Task.where(api_id: 2)
Task.where(api_id: 2).complete
Task.where(api_id: 2).first.complete
Task.where(api_id: 1).first.complete
Task.each{ |task| puts task.title }
Task.where(api_id: 2).first.complete
Task.where(api_id: 2).first.complete = 1
Task.save
Task.each{ |task| puts task.title }
exit
exit
Task.each{ |task| puts task.title }
Task.where(api_id: 2).first.complete = true
Task.each{ |task| puts task.title }
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exi
exit
exit
exit
exit
exit
exit
EXIT
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
Task.first
Task.each{|task| puts task.inspect}
Task.each{|task| puts task.inspect}
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
Task.count
Task.each{ |task| task.title }
exit
exit
exit
Task.first
Task.first.due_date
Task.first.due_date
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
Task.destroy_all
Task.save
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit
exit